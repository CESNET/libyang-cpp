{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "da3a963f_74ef290a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-06T12:09:39Z",
      "side": 1,
      "message": "This looks like a complex thing which will benefit from a test case (and the test case will also help me find out how I\u0027m supposed to use these).\n\nSuggestion: parse some NETCONF RPC like get-data, perhaps that will get you an anydata or anyxml instance. Also look at the RFC, get some example data, and write a test which checks that the binding operate \"sanely\".",
      "revId": "8a3fb6ca90d906c95330f85c2fc9d2c0f24c667c",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cd25536_02aea3f1",
        "filename": "include/libyang-cpp/DataNode.hpp",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-06T12:09:39Z",
      "side": 1,
      "message": "This looks unrelated to anyxml/anydata. If it is really needed, split it to an extra commit please, but I don\u0027t think it\u0027s actually needed.",
      "revId": "8a3fb6ca90d906c95330f85c2fc9d2c0f24c667c",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9040e76d_7261584d",
        "filename": "include/libyang-cpp/Value.hpp",
        "patchSetId": 3
      },
      "lineNbr": 222,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-06T12:09:39Z",
      "side": 1,
      "message": "This is related to my comment about the releaseValue() implementation. I would prefer to have this simplified, either into a variant\u003cnullopt_t, DataNode\u003e and no exception being thrown, or just a variant\u003cDataNode\u003e and an exception in case it cannot be extracted.",
      "revId": "8a3fb6ca90d906c95330f85c2fc9d2c0f24c667c",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13bf5e60_3d97e1f9",
        "filename": "src/DataNode.cpp",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-06T12:09:39Z",
      "side": 1,
      "message": "this is wrong",
      "revId": "8a3fb6ca90d906c95330f85c2fc9d2c0f24c667c",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2f5ca6c_f81b1c81",
        "filename": "src/DataNode.cpp",
        "patchSetId": 3
      },
      "lineNbr": 225,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-06T12:09:39Z",
      "side": 1,
      "message": "The code checks that the anydata value is usable twice, once here and the second time via any-\u003evalue.tree. Given that you already care about the \"there\u0027s nothing to extract here\" state and signal that back via a nullopt, throwing an exception here looks counter-intuitive to me.\n\nCan libyang plausibly create a strate where you have a LYD_ANYDATA_DATATREE in there, yet the actual value is nullptr? Is it important to distinguish between that and a state where someone has removed the value (like this binding code is doing)?",
      "range": {
        "startLine": 223,
        "startChar": 0,
        "endLine": 225,
        "endChar": 5
      },
      "revId": "8a3fb6ca90d906c95330f85c2fc9d2c0f24c667c",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    }
  ]
}