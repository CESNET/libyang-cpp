{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "634dd946_3af1f49b",
        "filename": "include/libyang-cpp/Value.hpp",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-14T09:23:07Z",
      "side": 1,
      "message": "wrong comment",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 34,
        "endChar": 3
      },
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27ce1cb0_1650b3cc",
        "filename": "include/libyang-cpp/Value.hpp",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-16T07:29:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "634dd946_3af1f49b",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 34,
        "endChar": 3
      },
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "015cb10e_9cc07c65",
        "filename": "include/libyang-cpp/Value.hpp",
        "patchSetId": 9
      },
      "lineNbr": 39,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-14T09:23:07Z",
      "side": 1,
      "message": "Please take a look at cla-sysrepo\u0027s Decimal64 (src/PropertyValue.h) and use it here (or explain why it is not a good match).",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 39,
        "endChar": 2
      },
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bee53723_42b4ad6a",
        "filename": "include/libyang-cpp/Value.hpp",
        "patchSetId": 9
      },
      "lineNbr": 39,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-16T07:29:30Z",
      "side": 1,
      "message": "It\u0027s a lot of code. But I can use it. Although I have to make the constructor public otherwise I can\u0027t construct it with runtime `digits` field. Should I add you to the \"Written by\" field at the top of the file?",
      "parentUuid": "015cb10e_9cc07c65",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 39,
        "endChar": 2
      },
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6737d6b_4ccdd5d9",
        "filename": "include/libyang-cpp/Value.hpp",
        "patchSetId": 9
      },
      "lineNbr": 39,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-16T09:46:46Z",
      "side": 1,
      "message": "yes",
      "parentUuid": "bee53723_42b4ad6a",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 39,
        "endChar": 2
      },
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6b1cc97_b6f88273",
        "filename": "include/libyang-cpp/Value.hpp",
        "patchSetId": 9
      },
      "lineNbr": 39,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-16T16:09:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6737d6b_4ccdd5d9",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 39,
        "endChar": 2
      },
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0f2095d_4ac00e7b",
        "filename": "src/DataNode.cpp",
        "patchSetId": 9
      },
      "lineNbr": 135,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-14T09:23:07Z",
      "side": 1,
      "message": "This means that you will have to maintain this wrapper and update it whenever the libyang\u0027s internal thing changes. Also, you\u0027ll only notice an eventual breakage under very exceptional circumstances (too big of an internal type? libyang plugins? whatever, I don\u0027t know).\n\nThe problem is that you cannot use a libyang\u0027s feature directly from C++. Perhaps it would be better to either add a C function which just calls that macro upstream and use that, or implement that yourself in this project as a C file (compiled by the C compiler). My preference is to implement this upstream.",
      "range": {
        "startLine": 134,
        "startChar": 0,
        "endLine": 135,
        "endChar": 33
      },
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d09e096c_c1213e16",
        "filename": "src/DataNode.cpp",
        "patchSetId": 9
      },
      "lineNbr": 135,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-16T07:29:30Z",
      "side": 1,
      "message": "To be honest, I have no idea how to create such a function without templates in C other than creating a bunch of functions for all of the types. The macro needs to know the type of the variable (which is the second argument of the macro).\n\nthis wouldn\u0027t work, because it does sizeof(void):\nvoid* lyd_value_get(struct lyd_value *value)\n{\n    Type* ret;\n    LYD_VALUE_GET(value, ret);\n\n    return ret;\n}\n\nThe `ret` variable needs to be of the wanted type, but I can\u0027t communicate that to the compiler in C. It could work in C++ templates, but then it\u0027s the same problem (can\u0027t assign void* to Type*).",
      "parentUuid": "c0f2095d_4ac00e7b",
      "range": {
        "startLine": 134,
        "startChar": 0,
        "endLine": 135,
        "endChar": 33
      },
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a4953b6_e9765d24",
        "filename": "src/DataNode.cpp",
        "patchSetId": 9
      },
      "lineNbr": 135,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-16T09:46:46Z",
      "side": 1,
      "message": "I didn\u0027t realize that, thanks.",
      "parentUuid": "d09e096c_c1213e16",
      "range": {
        "startLine": 134,
        "startChar": 0,
        "endLine": 135,
        "endChar": 33
      },
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d12c5aae_096e8fcd",
        "filename": "src/DataNode.cpp",
        "patchSetId": 9
      },
      "lineNbr": 199,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-14T09:23:07Z",
      "side": 1,
      "message": "a missing `throw`",
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ef4ce48_2bad78f3",
        "filename": "src/DataNode.cpp",
        "patchSetId": 9
      },
      "lineNbr": 199,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-16T07:29:30Z",
      "side": 1,
      "message": "All types are now implemented",
      "parentUuid": "d12c5aae_096e8fcd",
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14e8f809_11b57780",
        "filename": "src/DataNode.cpp",
        "patchSetId": 9
      },
      "lineNbr": 206,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-14T09:23:07Z",
      "side": 1,
      "message": "this looks fishy; how come you\u0027re returning a DataNode instead of a Value here?",
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b68560ec_c3e18677",
        "filename": "src/DataNode.cpp",
        "patchSetId": 9
      },
      "lineNbr": 206,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-16T07:29:30Z",
      "side": 1,
      "message": "It\u0027s the instance-identifier type, you return a DataNode which corresponds to the instance",
      "parentUuid": "14e8f809_11b57780",
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9530bef_7a6dac9a",
        "filename": "src/DataNode.cpp",
        "patchSetId": 9
      },
      "lineNbr": 206,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-16T09:46:46Z",
      "side": 1,
      "message": "I missed that there\u0027s an optional\u003cDataNode\u003e among the variant\u0027s types",
      "parentUuid": "b68560ec_c3e18677",
      "revId": "36e779de3b9a674488a756649f428c57deabc336",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    }
  ]
}