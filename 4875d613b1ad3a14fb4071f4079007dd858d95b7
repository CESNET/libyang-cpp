{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "93a01b62_92c7743c",
        "filename": "src/DataNode.cpp",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-16T09:16:46Z",
      "side": 1,
      "message": "why not just `oldRefs-\u003em_refs`? same in the second statement",
      "range": {
        "startLine": 154,
        "startChar": 19,
        "endLine": 154,
        "endChar": 40
      },
      "revId": "4875d613b1ad3a14fb4071f4079007dd858d95b7",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c91fd23_120a8826",
        "filename": "src/DataNode.cpp",
        "patchSetId": 2
      },
      "lineNbr": 177,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-16T09:16:46Z",
      "side": 1,
      "message": "This doesn\u0027t test for a parent, but for a predecessor. Also, it\u0027s using the C struct in its signature, so let\u0027s not make it part of the header (it doesn\u0027t have to be a method). What about:\n \nnamespace {\nbool isDescendantOf(lyd_node* node, lyd_node* predecessor);\n}",
      "range": {
        "startLine": 177,
        "startChar": 15,
        "endLine": 177,
        "endChar": 24
      },
      "revId": "4875d613b1ad3a14fb4071f4079007dd858d95b7",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bd93641_3ea350e4",
        "filename": "tests/data_node.cpp",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-16T09:16:46Z",
      "side": 1,
      "message": "we talked about this in the call today -- let\u0027s make the test more exhaustive:\n\n- use a more complex hierarchy, not just three levels of schema nesting, but at least five,\n- use DOCTEST_SUBCASEs for testing more cases, i.e., prepare a bunch of scenarios about what references to hold, and where to cut the tree, then perform the cut and check that all the references that are supposed to work still work, and then use a few more DOCTEST_SUBCASEs for trying out a different order of deletions",
      "revId": "4875d613b1ad3a14fb4071f4079007dd858d95b7",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    }
  ]
}