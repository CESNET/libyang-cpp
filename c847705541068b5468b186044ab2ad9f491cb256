{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "791a67fe_98586c01",
        "filename": "src/DataNode.cpp",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-06T08:46:21Z",
      "side": 1,
      "message": "This looks fishy. What happens when I get a DataNode, then I obtain a DataNodeSet through that, and then I let the DataNode go out of scope and finally I access the iterator? Please add a test for this.\n\n(I think that one way of fixing this is holding the `refs` in the DataNodeSet or even in the iterator; the other is holding a shared_ptr\u003cDataNode\u003e from the set or the iterator.)",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 50,
        "endChar": 5
      },
      "revId": "c847705541068b5468b186044ab2ad9f491cb256",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4fe93a8_5d17ed0c",
        "filename": "src/DataNode.cpp",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-09-08T08:08:20Z",
      "side": 1,
      "message": "\u003e(I think that one way of fixing this is holding the `refs` in the DataNodeSet or even in the iterator; the other is holding a shared_ptr\u003cDataNode\u003e from the set or the iterator.)\n\nI am holding refs in the DataNodeSet",
      "parentUuid": "791a67fe_98586c01",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 50,
        "endChar": 5
      },
      "revId": "c847705541068b5468b186044ab2ad9f491cb256",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d768f2ec_8511e5cb",
        "filename": "src/DataNode.cpp",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-09-08T08:09:45Z",
      "side": 1,
      "message": "There also is a test for exactly what you\u0027re, or at least I think. It\u0027s the \n DOCTEST_SUBCASE(\"Iterator invalidation on freeing the tree\")\n\nOr maybe I don\u0027t understand what you mean?",
      "parentUuid": "d4fe93a8_5d17ed0c",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 50,
        "endChar": 5
      },
      "revId": "c847705541068b5468b186044ab2ad9f491cb256",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b98f9c20_1e41032d",
        "filename": "src/DataNode.cpp",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-08T08:52:06Z",
      "side": 1,
      "message": "Nope, I was wrong, sorry. What confused me is that rather complex way of tracking validity, and a possibly invalid DataNodeSet that has to be handled. I guess I\u0027m still used to working with structs wrapped as shared_ptrs, but since you prefer instances being used as values and no enable_shared_from_this, then this state tracking has to be implemented manually.\n\nAnyway, the code looks correct to me now, you\u0027re right.",
      "parentUuid": "d768f2ec_8511e5cb",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 50,
        "endChar": 5
      },
      "revId": "c847705541068b5468b186044ab2ad9f491cb256",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54510596_e4833a20",
        "filename": "src/DataNode.cpp",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-09-08T11:39:00Z",
      "side": 1,
      "message": "I doubt that shared_ptrs would solve anything really. Also, I don\u0027t like pointers :)",
      "parentUuid": "b98f9c20_1e41032d",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 50,
        "endChar": 5
      },
      "revId": "c847705541068b5468b186044ab2ad9f491cb256",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    }
  ]
}